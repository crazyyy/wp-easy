{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"bord",
				"border-radius"
			],
			[
				"bor",
				"border-left"
			]
		]
	},
	"buffers":
	[
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 1151,
				"line_ending": "Windows"
			}
		},
		{
			"file": "search.php",
			"settings":
			{
				"buffer_size": 384,
				"line_ending": "Unix"
			}
		},
		{
			"file": "header.php",
			"settings":
			{
				"buffer_size": 1545,
				"line_ending": "Unix"
			}
		},
		{
			"file": "page.php",
			"settings":
			{
				"buffer_size": 677,
				"line_ending": "Windows"
			}
		},
		{
			"file": "single.php",
			"settings":
			{
				"buffer_size": 1782,
				"line_ending": "Unix"
			}
		},
		{
			"file": "comments.php",
			"settings":
			{
				"buffer_size": 630,
				"line_ending": "Unix"
			}
		},
		{
			"file": "category.php",
			"settings":
			{
				"buffer_size": 338,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<?php\n/*\n *  Author: knaipa | @Saitobaza\n *  URL: saitobaza.ru \n *  Custom functions, support, custom post types and more.\n */\n\n//  Enable styles for WP admin panel\n//  RU: Подключение собственных шрифтов и скриптов для админки\nfunction wpeAdminThemeStyle() {\n    wp_enqueue_style('my-admin-style', get_template_directory_uri() . '/css/admin.css');\n    wp_enqueue_style('my-admin-script', get_template_directory_uri() . '/js/admin.js');\n}\nadd_action('admin_enqueue_scripts', 'wpeAdminThemeStyle');\n\n\n// \n\n // Как изменить стандартный шрифт WordPress редактора\n // http://wordpresso.org/hacks/29-wordpress-tryukov-dlya-rabotyi-s-zapisyami-i-stranitsami/\n \n function change_editor_font(){\n    echo \"<style type='text/css'>\n\n    </style>\";\n}\nadd_action(\"admin_print_styles\", \"change_editor_font\");\n\n\n\n\n\n\n//  Catch first image from post and display it\n//  RU: Выделить первую изображение из записи\nfunction catch_that_image() {\n    global $post, $posts;\n    $first_img = '';\n    ob_start();\n    ob_end_clean();\n    $output = preg_match_all('/<img.+src=[\\'\"]([^\\'\"]+)[\\'\"].*>/i',\n    $post->post_content, $matches);\n    $first_img = $matches [1] [0];\n//  If post dont have an image - display image \"noimage\"\n//  RU: Если запись не содержит изображения - показывать картинку \"noimage\" \n    if(empty($first_img)){\n    $first_img = get_template_directory_uri() . '/img/noimage.jpg'; }\n    return $first_img;\n}\n\n//  Disable auto save posts\n//  RU: Отключение автоматического сохранения записи\n//  http://wordpresso.org/hacks/29-wordpress-tryukov-dlya-rabotyi-s-zapisyami-i-stranitsami/\nfunction disableAutoSave(){\n    wp_deregister_script('autosave');\n    }\nadd_action( 'wp_print_scripts', 'disableAutoSave' );\n\n\n/*------------------------------------*\\\n	External Modules/Files\n\\*------------------------------------*/\n\n// Load any external files you have here\n\n/*------------------------------------*\\\n	Theme Support\n\\*------------------------------------*/\n\nif (!isset($content_width))\n{\n    $content_width = 900;\n}\n\nif (function_exists('add_theme_support'))\n{\n    // Add Menu Support\n    add_theme_support('menus');\n\n    // Add Thumbnail Theme Support\n    add_theme_support('post-thumbnails');\n    add_image_size('large', 700, '', true); // Large Thumbnail\n    add_image_size('medium', 250, '', true); // Medium Thumbnail\n    add_image_size('small', 120, '', true); // Small Thumbnail\n    add_image_size('custom-size', 700, 200, true); // Custom Thumbnail Size call using the_post_thumbnail('custom-size');\n\n    // Add Support for Custom Backgrounds - Uncomment below if you're going to use\n    /*add_theme_support('custom-background', array(\n	'default-color' => 'FFF',\n	'default-image' => get_template_directory_uri() . '/img/bg.jpg'\n    ));*/\n\n    // Add Support for Custom Header - Uncomment below if you're going to use\n    /*add_theme_support('custom-header', array(\n	'default-image'			=> get_template_directory_uri() . '/img/headers/default.jpg',\n	'header-text'			=> false,\n	'default-text-color'		=> '000',\n	'width'				=> 1000,\n	'height'			=> 198,\n	'random-default'		=> false,\n	'wp-head-callback'		=> $wphead_cb,\n	'admin-head-callback'		=> $adminhead_cb,\n	'admin-preview-callback'	=> $adminpreview_cb\n    ));*/\n\n    // Enables post and comment RSS feed links to head\n    add_theme_support('automatic-feed-links');\n\n    // Localisation Support\n    load_theme_textdomain('html5blank', get_template_directory() . '/languages');\n}\n\n/*------------------------------------*\\\n	Functions\n\\*------------------------------------*/\n\n// HTML5 head navigation\nfunction html5blank_nav()\n{\n	wp_nav_menu(\n	array(\n		'theme_location'  => 'header-menu',\n		'menu'            => '', \n		'container'       => 'div', \n		'container_class' => 'menu-{menu slug}-container', \n		'container_id'    => '',\n		'menu_class'      => 'menu', \n		'menu_id'         => '',\n		'echo'            => true,\n		'fallback_cb'     => 'wp_page_menu',\n		'before'          => '',\n		'after'           => '',\n		'link_before'     => '',\n		'link_after'      => '',\n		'items_wrap'      => '<ul class=\"headnav\">%3$s</ul>',\n		'depth'           => 0,\n		'walker'          => ''\n		)\n	);\n}\n// HTML5 footer navigation\nfunction html5extra_nav()\n{\n	wp_nav_menu(\n	array(\n		'theme_location'  => 'extra-menu',\n		'menu'            => '', \n		'container'       => 'div', \n		'container_class' => 'menu-{menu slug}-container', \n		'container_id'    => '',\n		'menu_class'      => 'menu', \n		'menu_id'         => '',\n		'echo'            => true,\n		'fallback_cb'     => 'wp_page_menu',\n		'before'          => '',\n		'after'           => '',\n		'link_before'     => '',\n		'link_after'      => '',\n		'items_wrap'      => '<ul class=\"footernav\">%3$s</ul>',\n		'depth'           => 0,\n		'walker'          => ''\n		)\n	);\n}\n// HTML5 sidebar navigation\nfunction html5sidebar_nav()\n{\n	wp_nav_menu(\n	array(\n		'theme_location'  => 'sidebar-menu',\n		'menu'            => '', \n		'container'       => 'div', \n		'container_class' => 'menu-{menu slug}-container', \n		'container_id'    => '',\n		'menu_class'      => 'menu', \n		'menu_id'         => '',\n		'echo'            => true,\n		'fallback_cb'     => 'wp_page_menu',\n		'before'          => '',\n		'after'           => '',\n		'link_before'     => '',\n		'link_after'      => '',\n		'items_wrap'      => '<ul class=\"sidebarnav\">%3$s</ul>',\n		'depth'           => 0,\n		'walker'          => ''\n		)\n	);\n}\n\n\n// Load HTML5 Blank scripts (header.php)\nfunction html5blank_header_scripts()\n{\n    if (!is_admin()) {\n    \n    	wp_deregister_script('jquery'); // Deregister WordPress jQuery\n    	wp_register_script('jquery', 'http://ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js', array(), '1.9.1'); // Google CDN jQuery\n    	wp_enqueue_script('jquery'); // Enqueue it!\n    	\n    	wp_register_script('conditionizr', 'http://cdnjs.cloudflare.com/ajax/libs/conditionizr.js/2.2.0/conditionizr.min.js', array(), '2.2.0'); // Conditionizr\n        wp_enqueue_script('conditionizr'); // Enqueue it!\n        \n        wp_register_script('modernizr', 'http://cdnjs.cloudflare.com/ajax/libs/modernizr/2.6.2/modernizr.min.js', array(), '2.6.2'); // Modernizr\n        wp_enqueue_script('modernizr'); // Enqueue it!\n        \n        wp_register_script('html5blankscripts', get_template_directory_uri() . '/js/scripts.js', array(), '1.0.0'); // Custom scripts\n        wp_enqueue_script('html5blankscripts'); // Enqueue it!\n    }\n}\n\n// Load HTML5 Blank conditional scripts\nfunction html5blank_conditional_scripts()\n{\n    if (is_page('pagenamehere')) {\n        wp_register_script('scriptname', get_template_directory_uri() . '/js/scriptname.js', array('jquery'), '1.0.0'); // Conditional script(s)\n        wp_enqueue_script('scriptname'); // Enqueue it!\n    }\n}\n\n// Load HTML5 Blank styles\nfunction html5blank_styles()\n{\n    wp_register_style('normalize', get_template_directory_uri() . '/normalize.css', array(), '1.0', 'all');\n    wp_enqueue_style('normalize'); // Enqueue it!\n    \n    wp_register_style('html5blank', get_template_directory_uri() . '/style.css', array(), '1.0', 'all');\n    wp_enqueue_style('html5blank'); // Enqueue it!\n}\n\n// Register HTML5 Blank Navigation\nfunction register_html5_menu()\n{\n    register_nav_menus(array( // Using array to specify more menus if needed\n        'header-menu' => __('Меню в шапке', 'html5blank'), // Main Navigation\n        'sidebar-menu' => __('Меню в сайдбар', 'html5blank'), // Sidebar Navigation\n        'extra-menu' => __('Меню в футер', 'html5blank') // Extra Navigation if needed (duplicate as many as you need!)\n    ));\n}\n\n// Remove the <div> surrounding the dynamic navigation to cleanup markup\nfunction my_wp_nav_menu_args($args = '')\n{\n    $args['container'] = false;\n    return $args;\n}\n\n// Remove Injected classes, ID's and Page ID's from Navigation <li> items\nfunction my_css_attributes_filter($var)\n{\n    return is_array($var) ? array() : '';\n}\n\n// Remove invalid rel attribute values in the categorylist\nfunction remove_category_rel_from_category_list($thelist)\n{\n    return str_replace('rel=\"category tag\"', 'rel=\"tag\"', $thelist);\n}\n\n// Add page slug to body class, love this - Credit: Starkers Wordpress Theme\nfunction add_slug_to_body_class($classes)\n{\n    global $post;\n    if (is_home()) {\n        $key = array_search('blog', $classes);\n        if ($key > -1) {\n            unset($classes[$key]);\n        }\n    } elseif (is_page()) {\n        $classes[] = sanitize_html_class($post->post_name);\n    } elseif (is_singular()) {\n        $classes[] = sanitize_html_class($post->post_name);\n    }\n\n    return $classes;\n}\n\n// If Dynamic Sidebar Exists\nif (function_exists('register_sidebar'))\n{\n    // Define Sidebar Widget Area 1\n    register_sidebar(array(\n        'name' => __('Блок виджетов #1', 'html5blank'),\n        'description' => __('Description for this widget-area...', 'html5blank'),\n        'id' => 'widget-area-1',\n        'before_widget' => '<div id=\"%1$s\" class=\"widget %2$s\">',\n        'after_widget' => '</div>',\n        'before_title' => '<h3>',\n        'after_title' => '</h3>'\n    ));\n\n    // Define Sidebar Widget Area 2\n    register_sidebar(array(\n        'name' => __('Блок виджетов #2', 'html5blank'),\n        'description' => __('Description for this widget-area...', 'html5blank'),\n        'id' => 'widget-area-2',\n        'before_widget' => '<div id=\"%1$s\" class=\"widget %2$s\">',\n        'after_widget' => '</div>',\n        'before_title' => '<h3>',\n        'after_title' => '</h3>'\n    ));\n}\n\n// Remove wp_head() injected Recent Comment styles\nfunction my_remove_recent_comments_style()\n{\n    global $wp_widget_factory;\n    remove_action('wp_head', array(\n        $wp_widget_factory->widgets['WP_Widget_Recent_Comments'],\n        'recent_comments_style'\n    ));\n}\n\n// Pagination for paged posts, Page 1, Page 2, Page 3, with Next and Previous Links, No plugin\nfunction html5wp_pagination()\n{\n    global $wp_query;\n    $big = 999999999;\n    echo paginate_links(array(\n        'base' => str_replace($big, '%#%', get_pagenum_link($big)),\n        'format' => '?paged=%#%',\n        'current' => max(1, get_query_var('paged')),\n        'total' => $wp_query->max_num_pages\n    ));\n}\n\n// Custom Excerpts\nfunction html5wp_index($length) // Create 20 Word Callback for Index page Excerpts, call using html5wp_excerpt('html5wp_index');\n{\n    return 20;\n}\n\n// Create 40 Word Callback for Custom Post Excerpts, call using html5wp_excerpt('html5wp_custom_post');\nfunction html5wp_custom_post($length)\n{\n    return 40;\n}\n\n// Create the Custom Excerpts callback\nfunction html5wp_excerpt($length_callback = '', $more_callback = '')\n{\n    global $post;\n    if (function_exists($length_callback)) {\n        add_filter('excerpt_length', $length_callback);\n    }\n    if (function_exists($more_callback)) {\n        add_filter('excerpt_more', $more_callback);\n    }\n    $output = get_the_excerpt();\n    $output = apply_filters('wptexturize', $output);\n    $output = apply_filters('convert_chars', $output);\n    $output = '<p>' . $output . '</p>';\n    echo $output;\n}\n\n// Custom View Article link to Post\nfunction html5_blank_view_article($more)\n{\n    global $post;\n    return '... <a class=\"view-article\" href=\"' . get_permalink($post->ID) . '\">' . __('View Article', 'html5blank') . '</a>';\n}\n\n// Remove Admin bar\nfunction remove_admin_bar()\n{\n    return false;\n}\n\n// Remove 'text/css' from our enqueued stylesheet\nfunction html5_style_remove($tag)\n{\n    return preg_replace('~\\s+type=[\"\\'][^\"\\']++[\"\\']~', '', $tag);\n}\n\n// Remove thumbnail width and height dimensions that prevent fluid images in the_thumbnail\nfunction remove_thumbnail_dimensions( $html )\n{\n    $html = preg_replace('/(width|height)=\\\"\\d*\\\"\\s/', \"\", $html);\n    return $html;\n}\n\n// Custom Gravatar in Settings > Discussion\nfunction html5blankgravatar ($avatar_defaults)\n{\n    $myavatar = get_template_directory_uri() . '/img/gravatar.jpg';\n    $avatar_defaults[$myavatar] = \"Custom Gravatar\";\n    return $avatar_defaults;\n}\n\n// Threaded Comments\nfunction enable_threaded_comments()\n{\n    if (!is_admin()) {\n        if (is_singular() AND comments_open() AND (get_option('thread_comments') == 1)) {\n            wp_enqueue_script('comment-reply');\n        }\n    }\n}\n\n// Custom Comments Callback\nfunction html5blankcomments($comment, $args, $depth)\n{\n	$GLOBALS['comment'] = $comment;\n	extract($args, EXTR_SKIP);\n	\n	if ( 'div' == $args['style'] ) {\n		$tag = 'div';\n		$add_below = 'comment';\n	} else {\n		$tag = 'li';\n		$add_below = 'div-comment';\n	}\n?>\n    <!-- heads up: starting < for the html tag (li or div) in the next line: -->\n    <<?php echo $tag ?> <?php comment_class(empty( $args['has_children'] ) ? '' : 'parent') ?> id=\"comment-<?php comment_ID() ?>\">\n	<?php if ( 'div' != $args['style'] ) : ?>\n	<div id=\"div-comment-<?php comment_ID() ?>\" class=\"comment-body\">\n	<?php endif; ?>\n	<div class=\"comment-author vcard\">\n	<?php if ($args['avatar_size'] != 0) echo get_avatar( $comment, $args['180'] ); ?>\n	<?php printf(__('<cite class=\"fn\">%s</cite> <span class=\"says\">says:</span>'), get_comment_author_link()) ?>\n	</div>\n<?php if ($comment->comment_approved == '0') : ?>\n	<em class=\"comment-awaiting-moderation\"><?php _e('Your comment is awaiting moderation.') ?></em>\n	<br />\n<?php endif; ?>\n\n	<div class=\"comment-meta commentmetadata\"><a href=\"<?php echo htmlspecialchars( get_comment_link( $comment->comment_ID ) ) ?>\">\n		<?php\n			printf( __('%1$s at %2$s'), get_comment_date(),  get_comment_time()) ?></a><?php edit_comment_link(__('(Edit)'),'  ','' );\n		?>\n	</div>\n\n	<?php comment_text() ?>\n\n	<div class=\"reply\">\n	<?php comment_reply_link(array_merge( $args, array('add_below' => $add_below, 'depth' => $depth, 'max_depth' => $args['max_depth']))) ?>\n	</div>\n	<?php if ( 'div' != $args['style'] ) : ?>\n	</div>\n	<?php endif; ?>\n<?php }\n\n/*------------------------------------*\\\n	Actions + Filters + ShortCodes\n\\*------------------------------------*/\n\n// Add Actions\nadd_action('init', 'html5blank_header_scripts'); // Add Custom Scripts to wp_head\nadd_action('wp_print_scripts', 'html5blank_conditional_scripts'); // Add Conditional Page Scripts\nadd_action('get_header', 'enable_threaded_comments'); // Enable Threaded Comments\nadd_action('wp_enqueue_scripts', 'html5blank_styles'); // Add Theme Stylesheet\nadd_action('init', 'register_html5_menu'); // Add HTML5 Blank Menu\nadd_action('widgets_init', 'my_remove_recent_comments_style'); // Remove inline Recent Comment Styles from wp_head()\nadd_action('init', 'html5wp_pagination'); // Add our HTML5 Pagination\n\n// Remove Actions\nremove_action('wp_head', 'feed_links_extra', 3); // Display the links to the extra feeds such as category feeds\nremove_action('wp_head', 'feed_links', 2); // Display the links to the general feeds: Post and Comment Feed\nremove_action('wp_head', 'rsd_link'); // Display the link to the Really Simple Discovery service endpoint, EditURI link\nremove_action('wp_head', 'wlwmanifest_link'); // Display the link to the Windows Live Writer manifest file.\nremove_action('wp_head', 'index_rel_link'); // Index link\nremove_action('wp_head', 'parent_post_rel_link', 10, 0); // Prev link\nremove_action('wp_head', 'start_post_rel_link', 10, 0); // Start link\nremove_action('wp_head', 'adjacent_posts_rel_link', 10, 0); // Display relational links for the posts adjacent to the current post.\nremove_action('wp_head', 'wp_generator'); // Display the XHTML generator that is generated on the wp_head hook, WP version\nremove_action('wp_head', 'start_post_rel_link', 10, 0);\nremove_action('wp_head', 'adjacent_posts_rel_link_wp_head', 10, 0);\nremove_action('wp_head', 'rel_canonical');\nremove_action('wp_head', 'wp_shortlink_wp_head', 10, 0);\n\n// Add Filters\nadd_filter('avatar_defaults', 'html5blankgravatar'); // Custom Gravatar in Settings > Discussion\nadd_filter('body_class', 'add_slug_to_body_class'); // Add slug to body class (Starkers build)\nadd_filter('widget_text', 'do_shortcode'); // Allow shortcodes in Dynamic Sidebar\nadd_filter('widget_text', 'shortcode_unautop'); // Remove <p> tags in Dynamic Sidebars (better!)\nadd_filter('wp_nav_menu_args', 'my_wp_nav_menu_args'); // Remove surrounding <div> from WP Navigation\n// add_filter('nav_menu_css_class', 'my_css_attributes_filter', 100, 1); // Remove Navigation <li> injected classes (Commented out by default)\n// add_filter('nav_menu_item_id', 'my_css_attributes_filter', 100, 1); // Remove Navigation <li> injected ID (Commented out by default)\n// add_filter('page_css_class', 'my_css_attributes_filter', 100, 1); // Remove Navigation <li> Page ID's (Commented out by default)\nadd_filter('the_category', 'remove_category_rel_from_category_list'); // Remove invalid rel attribute\nadd_filter('the_excerpt', 'shortcode_unautop'); // Remove auto <p> tags in Excerpt (Manual Excerpts only)\nadd_filter('the_excerpt', 'do_shortcode'); // Allows Shortcodes to be executed in Excerpt (Manual Excerpts only)\nadd_filter('excerpt_more', 'html5_blank_view_article'); // Add 'View Article' button instead of [...] for Excerpts\nadd_filter('show_admin_bar', 'remove_admin_bar'); // Remove Admin bar\nadd_filter('style_loader_tag', 'html5_style_remove'); // Remove 'text/css' from enqueued stylesheet\nadd_filter('post_thumbnail_html', 'remove_thumbnail_dimensions', 10); // Remove width and height dynamic attributes to thumbnails\nadd_filter('image_send_to_editor', 'remove_thumbnail_dimensions', 10); // Remove width and height dynamic attributes to post images\n\n// Remove Filters\nremove_filter('the_excerpt', 'wpautop'); // Remove <p> tags from Excerpt altogether\n\n// Shortcodes\nadd_shortcode('html5_shortcode_demo', 'html5_shortcode_demo'); // You can place [html5_shortcode_demo] in Pages, Posts now.\nadd_shortcode('html5_shortcode_demo_2', 'html5_shortcode_demo_2'); // Place [html5_shortcode_demo_2] in Pages, Posts now.\n\n// Shortcodes above would be nested like this -\n// [html5_shortcode_demo] [html5_shortcode_demo_2] Here's the page title! [/html5_shortcode_demo_2] [/html5_shortcode_demo]\n/*------------------------------------*\\\n	ShortCode Functions\n\\*------------------------------------*/\n\n// Shortcode Demo with Nested Capability\nfunction html5_shortcode_demo($atts, $content = null)\n{\n    return '<div class=\"shortcode-demo\">' . do_shortcode($content) . '</div>'; // do_shortcode allows for nested Shortcodes\n}\n\n// Shortcode Demo with simple <h2> tag\nfunction html5_shortcode_demo_2($atts, $content = null) // Demo Heading H2 shortcode, allows for nesting within above element. Fully expandable.\n{\n    return '<h2>' . $content . '</h2>';\n}\n\n\n/*\n * ========================================================================\n *  Дополнительно всякий мусор\n * ========================================================================\n */\n\n // Как отключить комментарии для Медиафайлов WordPress\n // http://wordpresso.org/hacks/kak-otklyuchit-kommentarii-dlya-mediafaylov-wordpress/\n \n function filter_media_comment_status( $open, $post_id ) {\n	$post = get_post( $post_id );\n	if( $post->post_type == 'attachment' ) {\n		return false;\n	}\n	return $open;\n}\nadd_filter( 'comments_open', 'filter_media_comment_status', 10 , 2 );\n\n // Редирект записи, когда поисковый запрос выдает один результат\n // http://wordpresso.org/hacks/29-wordpress-tryukov-dlya-rabotyi-s-zapisyami-i-stranitsami/\n \nadd_action('template_redirect', 'single_result');\nfunction single_result() {\n	if (is_search()) {\n		global $wp_query;\n		if ($wp_query->post_count == 1) {\n			wp_redirect( get_permalink( $wp_query->posts['0']->ID ) );\n		}\n	}\n}\n\n// хлебные крошки 	http://dimox.name/wordpress-breadcrumbs-without-a-plugin/\n// < ?php if (function_exists('dimox_breadcrumbs')) dimox_breadcrumbs(); ? >\n// \nfunction dimox_breadcrumbs() {\n\n	/* === ОПЦИИ === */\n	$text['home'] = 'Главная'; // текст ссылки \"Главная\"\n	$text['category'] = 'Архив рубрики \"%s\"'; // текст для страницы рубрики\n	$text['search'] = 'Результаты поиска по запросу \"%s\"'; // текст для страницы с результатами поиска\n	$text['tag'] = 'Записи с тегом \"%s\"'; // текст для страницы тега\n	$text['author'] = 'Статьи автора %s'; // текст для страницы автора\n	$text['404'] = 'Ошибка 404'; // текст для страницы 404\n\n	$show_current = 1; // 1 - показывать название текущей статьи/страницы/рубрики, 0 - не показывать\n	$show_on_home = 0; // 1 - показывать \"хлебные крошки\" на главной странице, 0 - не показывать\n	$show_home_link = 1; // 1 - показывать ссылку \"Главная\", 0 - не показывать\n	$show_title = 1; // 1 - показывать подсказку (title) для ссылок, 0 - не показывать\n	$delimiter = ' &raquo; '; // разделить между \"крошками\"\n	$before = '<span class=\"current\">'; // тег перед текущей \"крошкой\"\n	$after = '</span>'; // тег после текущей \"крошки\"\n	/* === КОНЕЦ ОПЦИЙ === */\n\n	global $post;\n	$home_link = home_url('/');\n	$link_before = '<span typeof=\"v:Breadcrumb\">';\n	$link_after = '</span>';\n	$link_attr = ' rel=\"v:url\" property=\"v:title\"';\n	$link = $link_before . '<a' . $link_attr . ' href=\"%1$s\">%2$s</a>' . $link_after;\n	$parent_id = $parent_id_2 = $post->post_parent;\n	$frontpage_id = get_option('page_on_front');\n\n	if (is_home() || is_front_page()) {\n\n		if ($show_on_home == 1) echo '<div class=\"breadcrumbs\"><a href=\"' . $home_link . '\">' . $text['home'] . '</a></div>';\n\n	} else {\n\n		echo '<div class=\"breadcrumbs\" xmlns:v=\"http://rdf.data-vocabulary.org/#\">';\n		if ($show_home_link == 1) {\n			echo '<a href=\"' . $home_link . '\" rel=\"v:url\" property=\"v:title\">' . $text['home'] . '</a>';\n			if ($frontpage_id == 0 || $parent_id != $frontpage_id) echo $delimiter;\n		}\n\n		if ( is_category() ) {\n			$this_cat = get_category(get_query_var('cat'), false);\n			if ($this_cat->parent != 0) {\n				$cats = get_category_parents($this_cat->parent, TRUE, $delimiter);\n				if ($show_current == 0) $cats = preg_replace(\"#^(.+)$delimiter$#\", \"$1\", $cats);\n				$cats = str_replace('<a', $link_before . '<a' . $link_attr, $cats);\n				$cats = str_replace('</a>', '</a>' . $link_after, $cats);\n				if ($show_title == 0) $cats = preg_replace('/ title=\"(.*?)\"/', '', $cats);\n				echo $cats;\n			}\n			if ($show_current == 1) echo $before . sprintf($text['category'], single_cat_title('', false)) . $after;\n\n		} elseif ( is_search() ) {\n			echo $before . sprintf($text['search'], get_search_query()) . $after;\n\n		} elseif ( is_day() ) {\n			echo sprintf($link, get_year_link(get_the_time('Y')), get_the_time('Y')) . $delimiter;\n			echo sprintf($link, get_month_link(get_the_time('Y'),get_the_time('m')), get_the_time('F')) . $delimiter;\n			echo $before . get_the_time('d') . $after;\n\n		} elseif ( is_month() ) {\n			echo sprintf($link, get_year_link(get_the_time('Y')), get_the_time('Y')) . $delimiter;\n			echo $before . get_the_time('F') . $after;\n\n		} elseif ( is_year() ) {\n			echo $before . get_the_time('Y') . $after;\n\n		} elseif ( is_single() && !is_attachment() ) {\n			if ( get_post_type() != 'post' ) {\n				$post_type = get_post_type_object(get_post_type());\n				$slug = $post_type->rewrite;\n				printf($link, $home_link . '/' . $slug['slug'] . '/', $post_type->labels->singular_name);\n				if ($show_current == 1) echo $delimiter . $before . get_the_title() . $after;\n			} else {\n				$cat = get_the_category(); $cat = $cat[0];\n				$cats = get_category_parents($cat, TRUE, $delimiter);\n				if ($show_current == 0) $cats = preg_replace(\"#^(.+)$delimiter$#\", \"$1\", $cats);\n				$cats = str_replace('<a', $link_before . '<a' . $link_attr, $cats);\n				$cats = str_replace('</a>', '</a>' . $link_after, $cats);\n				if ($show_title == 0) $cats = preg_replace('/ title=\"(.*?)\"/', '', $cats);\n				echo $cats;\n				if ($show_current == 1) echo $before . get_the_title() . $after;\n			}\n\n		} elseif ( !is_single() && !is_page() && get_post_type() != 'post' && !is_404() ) {\n			$post_type = get_post_type_object(get_post_type());\n			echo $before . $post_type->labels->singular_name . $after;\n\n		} elseif ( is_attachment() ) {\n			$parent = get_post($parent_id);\n			$cat = get_the_category($parent->ID); $cat = $cat[0];\n			$cats = get_category_parents($cat, TRUE, $delimiter);\n			$cats = str_replace('<a', $link_before . '<a' . $link_attr, $cats);\n			$cats = str_replace('</a>', '</a>' . $link_after, $cats);\n			if ($show_title == 0) $cats = preg_replace('/ title=\"(.*?)\"/', '', $cats);\n			echo $cats;\n			printf($link, get_permalink($parent), $parent->post_title);\n			if ($show_current == 1) echo $delimiter . $before . get_the_title() . $after;\n\n		} elseif ( is_page() && !$parent_id ) {\n			if ($show_current == 1) echo $before . get_the_title() . $after;\n\n		} elseif ( is_page() && $parent_id ) {\n			if ($parent_id != $frontpage_id) {\n				$breadcrumbs = array();\n				while ($parent_id) {\n					$page = get_page($parent_id);\n					if ($parent_id != $frontpage_id) {\n						$breadcrumbs[] = sprintf($link, get_permalink($page->ID), get_the_title($page->ID));\n					}\n					$parent_id = $page->post_parent;\n				}\n				$breadcrumbs = array_reverse($breadcrumbs);\n				for ($i = 0; $i < count($breadcrumbs); $i++) {\n					echo $breadcrumbs[$i];\n					if ($i != count($breadcrumbs)-1) echo $delimiter;\n				}\n			}\n			if ($show_current == 1) {\n				if ($show_home_link == 1 || ($parent_id_2 != 0 && $parent_id_2 != $frontpage_id)) echo $delimiter;\n				echo $before . get_the_title() . $after;\n			}\n\n		} elseif ( is_tag() ) {\n			echo $before . sprintf($text['tag'], single_tag_title('', false)) . $after;\n\n		} elseif ( is_author() ) {\n	 		global $author;\n			$userdata = get_userdata($author);\n			echo $before . sprintf($text['author'], $userdata->display_name) . $after;\n\n		} elseif ( is_404() ) {\n			echo $before . $text['404'] . $after;\n		}\n\n		if ( get_query_var('paged') ) {\n			if ( is_category() || is_day() || is_month() || is_year() || is_search() || is_tag() || is_author() ) echo ' (';\n			echo __('Page') . ' ' . get_query_var('paged');\n			if ( is_category() || is_day() || is_month() || is_year() || is_search() || is_tag() || is_author() ) echo ')';\n		}\n\n		echo '</div><!-- .breadcrumbs -->';\n\n	}\n} // end dimox_breadcrumbs()\n\n\n\n?>",
			"file": "functions.php",
			"file_size": 27541,
			"file_write_time": 130364542402646709,
			"settings":
			{
				"buffer_size": 25820,
				"line_ending": "Windows"
			}
		},
		{
			"file": "css/admin.css",
			"settings":
			{
				"buffer_size": 156,
				"line_ending": "Windows"
			}
		},
		{
			"file": "style.css",
			"settings":
			{
				"buffer_size": 4940,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"aut",
				"Autoprefix CSS"
			],
			[
				"au",
				"Autoprefix CSS"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"git ",
				"Git: Push"
			],
			[
				"git qu",
				"Git: Quick Commit"
			],
			[
				"git q",
				"Git: Quick Commit"
			],
			[
				"git qui",
				"Git: Quick Commit"
			],
			[
				"git pu",
				"Git: Push"
			],
			[
				"git",
				"Git: Push"
			],
			[
				"gut",
				"Git: Quick Commit"
			],
			[
				"git s",
				"Git: Status"
			],
			[
				"gi",
				"Git: Push"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"ti",
				"Tidy PHP"
			],
			[
				"tid",
				"Tidy PHP"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: re",
				"Package Control: Remove Package"
			],
			[
				"subl",
				"SublimeZilla: Import FileZilla Server"
			],
			[
				"",
				"Autoprefix CSS"
			],
			[
				"a",
				"Autoprefix CSS"
			],
			[
				"colo",
				"BracketHighlighter: Toggle Global Enable"
			]
		],
		"width": 464.0
	},
	"console":
	{
		"height": 209.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/Downloads/Dropbox/Soft/SublimeText2/Data/Packages/Default/Preferences.sublime-settings",
		"/D/Downloads/Dropbox/Soft/SublimeText2/Data/Packages/User/Preferences.sublime-settings",
		"/D/Downloads/Dropbox/Soft/SublimeText2/Data/Packages/User/JSON.sublime-settings",
		"/D/Downloads/Dropbox/Soft/SublimeText2/Data/Packages/Autoprefixer/Autoprefixer.sublime-settings",
		"/D/Downloads/Dropbox/Soft/SublimeText2/Data/Packages/CSScomb/README.md",
		"/D/Downloads/Dropbox/Soft/SublimeText2/Data/Packages/Emmet/Default (Windows).sublime-keymap",
		"/D/Downloads/Dropbox/Soft/SublimeText2/Data/Packages/Git/Git.sublime-settings",
		"/D/Downloads/Dropbox/Soft/SublimeText2/Data/Packages/Automatic Backups/Automatic Backups.sublime-settings",
		"/C/OpenServer/domains/wpeasy.me/wp-content/themes/wp-easy/style.css",
		"/C/Users/Администратор/.gitconfig",
		"/C/OpenServer/domains/wpeasy.me/wp-content/themes/wp-easy/.git/config",
		"/D/Downloads/Dropbox/Soft/SublimeText2/Data/Packages/GitGutter/GitGutter.sublime-settings",
		"/C/OpenServer/domains/wpeasy.me/wp-content/themes/wp-easy/page.php",
		"/C/OpenServer/domains/wpeasy.me/wp-content/themes/wp-easy/.gitignore",
		"/D/Downloads/Dropbox/Soft/SublimeText2/Data/Packages/Tortoise/Tortoise.sublime-settings",
		"/C/OpenServer/domains/wpeasy.me/wp-content/themes/wp-easy/single.php",
		"/D/Downloads/Dropbox/Soft/SublimeText2/Data/Packages/Tortoise/Default (Windows).sublime-keymap",
		"/D/Downloads/Dropbox/Soft/SublimeText2/Data/Packages/TortoiseSVN/TortoiseSVN.sublime-settings",
		"/C/OpenServer/domains/wpeasy.me/wp-content/themes/wp-easy/header.php",
		"/C/OpenServer/domains/wpeasy.me/wp-content/themes/wp-easy/README.md",
		"/C/OpenServer/domains/wpeasy.me/wp-content/themes/wp-easy/pagination.php",
		"/D/Downloads/Dropbox/Soft/SublimeText2/Data/Packages/PhpTidy/PhpTidy.sublime-settings",
		"/D/Downloads/Dropbox/Soft/SublimeText2/Data/Packages/User/PhpTidy.sublime-settings",
		"/D/Downloads/Dropbox/Soft/SublimeText2/Data/Packages/Package Control/package_control/unicode.py",
		"/C/OpenServer/domains/wpeasy.me/wp-content/themes/wp-easy/favicon.ico",
		"/C/Users/Администратор/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/D/SublimeText2/Data/Packages/Default/Preferences.sublime-settings",
		"/C/Users/Администратор/AppData/Roaming/Sublime Text 2/Packages/User/JSON.sublime-settings",
		"/C/Users/Администратор/AppData/Roaming/Sublime Text 2/Packages/Tortoise/Tortoise.sublime-settings",
		"/C/OpenServer/domains/wpeasy.me/wp-content/themes/wp-easy/img/bg/readme.txt",
		"/C/OpenServer/domains/wpeasy.me/wp-content/themes/wp-easy/img/readme.txt",
		"/C/OpenServer/domains/javabox.net/templates/smartmobile_fix/main.tpl",
		"/C/OpenServer/domains/javabox.net/templates/smartmobile_fix/fullstory.tpl",
		"/C/OpenServer/domains/javabox.net/templates/smartmobile_fix/addcomments.tpl",
		"/C/OpenServer/domains/javabox.net/templates/smartmobile_fix/css/engine.css",
		"/C/OpenServer/domains/javabox.net/templates/smartmobile_fix/css/style.css",
		"/C/OpenServer/domains/javabox.net/templates/smartmobile_fix/css/dle-styles.css",
		"/C/OpenServer/domains/javabox.net/templates/smartmobile_fix/search.tpl",
		"/C/OpenServer/domains/javabox.net/templates/smartmobile_fix/searchresult.tpl",
		"/C/OpenServer/domains/javabox.net/templates/smartmobile_fix/fullstory-andr.tpl",
		"/C/OpenServer/domains/javabox.net/templates/smartmobile_fix/fullstory-app.tpl",
		"/C/OpenServer/domains/javabox.net/templates/smartmobile_fix/fullstory-android.tpl",
		"/C/OpenServer/domains/javabox.net/templates/smartmobile_fix/fullstory-book.tpl",
		"/C/OpenServer/domains/javabox.net/templates/smartmobile_fix/fullstory-game.tpl",
		"/C/OpenServer/domains/javabox.net/templates/smartmobile_fix/fullstory-obzor.tpl",
		"/C/OpenServer/domains/javabox.net/templates/smartmobile_fix/fullstory-symb.tpl",
		"/C/OpenServer/domains/javabox.net/templates/smartmobile_fix/comments.tpl",
		"/C/OpenServer/domains/dle.me/templates/smartmobile_fix/css/style.css",
		"/C/OpenServer/domains/dle.me/templates/smartmobile_fix/addcomments.tpl",
		"/C/OpenServer/domains/dle.me/templates/smartmobile_fix/main.tpl",
		"/C/Users/Администратор/AppData/Roaming/Sublime Text 2/Packages/TidyHTML5/Default (Windows).sublime-keymap",
		"/C/Users/Администратор/AppData/Roaming/Sublime Text 2/Packages/SFTP/Default (Windows).sublime-keymap",
		"/D/work/verstka/Radesign/zaglushka/index.html",
		"/D/work/verstka/Radesign/zaglushka/style.css",
		"/C/Users/Администратор/AppData/Roaming/Sublime Text 2/Packages/LiveReload/LiveReload.sublime-settings",
		"/D/work/verstka/Radesign/zaglushka/sftp-config.json",
		"/C/OpenServer/domains/hello.me/style.css",
		"/C/OpenServer/domains/hello.me/index.html",
		"/D/temper/index.html",
		"/D/temper/style.css",
		"/C/Users/Администратор/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/C/Users/Администратор/AppData/Roaming/Sublime Text 2/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/Администратор/AppData/Roaming/Sublime Text 2/Packages/Emmet/Default (Windows).sublime-keymap",
		"/D/work/verstka/pdplus.ru/html/style.css",
		"/D/work/verstka/pdplus.ru/html/index.html",
		"/D/temp.css",
		"/C/Users/Администратор/AppData/Roaming/Sublime Text 2/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/Администратор/AppData/Roaming/Sublime Text 2/Packages/Autoprefixer/Autoprefixer.sublime-settings",
		"/C/Users/Администратор/AppData/Roaming/Sublime Text 2/Packages/BracketHighlighter/bh_core.sublime-settings",
		"/C/Users/Администратор/AppData/Roaming/Sublime Text 2/Packages/Snipt.net Snippet Fetcher/Snipt.sublime-settings",
		"/C/Users/Администратор/AppData/Roaming/Sublime Text 2/Packages/BracketHighlighter/Default.sublime-commands",
		"/C/Users/Администратор/AppData/Roaming/Sublime Text 2/Packages/BracketHighlighter/Example.sublime-keymap",
		"/C/Users/Администратор/AppData/Roaming/Sublime Text 2/Packages/Default/Context.sublime-menu",
		"/C/Users/Администратор/AppData/Roaming/Sublime Text 2/Packages/CSScomb/README.md"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			".addcom",
			".js",
			"header",
			"ctrl+shift+d",
			"ctrl+d",
			"ctrl+shift+d",
			"ctrl+d",
			"p {\n	margin: 0 0 18px\n}"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"c"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "README.md",
					"settings":
					{
						"buffer_size": 1151,
						"regions":
						{
						},
						"selection":
						[
							[
								307,
								307
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "search.php",
					"settings":
					{
						"buffer_size": 384,
						"regions":
						{
						},
						"selection":
						[
							[
								83,
								83
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "header.php",
					"settings":
					{
						"buffer_size": 1545,
						"regions":
						{
						},
						"selection":
						[
							[
								569,
								569
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "page.php",
					"settings":
					{
						"buffer_size": 677,
						"regions":
						{
						},
						"selection":
						[
							[
								208,
								216
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "single.php",
					"settings":
					{
						"buffer_size": 1782,
						"regions":
						{
						},
						"selection":
						[
							[
								537,
								574
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 81.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "comments.php",
					"settings":
					{
						"buffer_size": 630,
						"regions":
						{
						},
						"selection":
						[
							[
								277,
								277
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "category.php",
					"settings":
					{
						"buffer_size": 338,
						"regions":
						{
						},
						"selection":
						[
							[
								258,
								258
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "functions.php",
					"settings":
					{
						"buffer_size": 25820,
						"regions":
						{
						},
						"selection":
						[
							[
								721,
								721
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 81.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "css/admin.css",
					"settings":
					{
						"buffer_size": 156,
						"regions":
						{
						},
						"selection":
						[
							[
								156,
								156
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/CSS/CSS.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "style.css",
					"settings":
					{
						"buffer_size": 4940,
						"regions":
						{
						},
						"selection":
						[
							[
								770,
								770
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 43.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.git":
	{
		"height": 183.0
	},
	"output.sftp":
	{
		"height": 172.0
	},
	"output.unsaved_changes":
	{
		"height": 172.0
	},
	"replace":
	{
		"height": 80.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 196.0,
	"status_bar_visible": true
}
